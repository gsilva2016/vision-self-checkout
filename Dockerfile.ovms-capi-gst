#
# Copyright (C) 2023 Intel Corporation.
#
# SPDX-License-Identifier: Apache-2.0
#

# -----------------------------------------------------------
ARG BASE_IMAGE=openvino/model_server:2023.1-gpu
FROM $BASE_IMAGE as release
ENV DEBIAN_FRONTEND=noninteractive
SHELL ["/bin/bash", "-c"]
WORKDIR /

# Install dependencies for compiling ocv4.7.0
ARG BUILD_DEPENDENCIES="cmake build-essential git-gui python3 python3-pip flex bison clang libgtk2.0-dev libhdf5-serial-dev libvtk9-dev libtbb2 libxml2 curl libpugixml1v5"

RUN apt -y update && \
    apt install -y ${BUILD_DEPENDENCIES} && \
    rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*

# Install Discrete GPU drivers for Arc. Enables media FF hardware.
# Note replace arc with flex or max using DGPU_TYPE below
ARG DGPU_TYPE="arc"
RUN apt update -y; apt install -y wget curl vim gpg-agent; wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg; echo "deb [arch=amd64,i386 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu jammy $DGPU_TYPE" | tee /etc/apt/sources.list.d/intel-gpu-jammy.list; apt update -y; DEBIAN_FRONTEND=noninteractive apt-get install -y \
intel-opencl-icd intel-level-zero-gpu level-zero intel-media-va-driver-non-free libmfx1 libmfxgen1 libvpl2 libegl-mesa0 libegl1-mesa libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri libglapi-mesa libgles2-mesa-dev libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo libcanberra-gtk-module

# Install GStreamer with OneVPL
RUN apt update; apt -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

# COPY OVMS runtime
COPY ovms.tar.gz /
RUN tar -xf ovms.tar.gz
#RUN find / -name *ovms*.so
#RUN rm /ovms/lib/*opencv*;


# Copy C-API sources
#RUN mv model_repo configs
RUN DEBIAN_FRONTEND=noninteractive apt install -y jq libopencv-dev python3-opencv gstreamer1.0-plugins-base-apps -y && \
    rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*

ENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/:/usr/local/lib/x86_64-linux-gnu/:/usr/local/lib:/ovms/lib:$LD_LIBRARY_PATH
COPY configs/gst-ovms /home/intel/gst-ovms
COPY get-media-codec.sh /home/intel/gst-ovms/
COPY configs/gst-ovms/launch-pipeline.sh /home/intel/gst-ovms/
RUN cd /home/intel/gst-ovms/pipelines; chmod +x build-demos.sh; ./build-demos.sh

USER ovms
ENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/:/usr/local/lib/x86_64-linux-gnu/:/usr/local/lib:/ovms/lib:$LD_LIBRARY_PATH

# Enable HWA decoder for OpenCV using GST use cases
ENV OPENCV_FFMPEG_CAPTURE_OPTIONS="hw_decoders_any;vaapi"

ENTRYPOINT ["/bin/bash", "-c"]
